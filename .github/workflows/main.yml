name: CI

on: [push]

jobs:
  mac_build:
    strategy:
      matrix:
        platform: [macos-latest-xlarge]
        version: [4.3, 3.x]
    runs-on: ${{ matrix.platform }}
    steps:
    - uses: actions/checkout@v4
      with:
        submodules: 'recursive'
    - name: clone Godot repository
      uses: GuillaumeFalourd/clone-github-repo-action@v2.3
      with:
        depth: 1
        branch: ${{ matrix.version }}
        owner: 'godotengine'
        repository: 'godot'
    - name: prepare scons
      run: |
          brew install python3 scons
    - name: install Vulkan SDK
      run: |
          curl -L "https://sdk.lunarg.com/sdk/download/1.4.321.0/mac/vulkansdk-macos-1.4.321.0.zip" -o /tmp/vulkan-sdk.zip
          unzip /tmp/vulkan-sdk.zip -d /tmp/vulkan-sdk
          /tmp/vulkan-sdk/vulkansdk-macOS-1.4.321.0.app/Contents/MacOS/vulkansdk-macOS-1.4.321.0 --accept-licenses --default-answer --confirm-command install
          rm -f /tmp/vulkan-sdk.zip
          rm -rf /tmp/vulkan-sdk
      if: ${{ matrix.version == 4.3 }}
    - name: build godot
      run: |
        ./macbuild.sh version=${{ matrix.version }}
  win_build:
    strategy:
      matrix:
        platform: [windows-latest]
        version: [4.3, 3.x]
    runs-on: ${{ matrix.platform }}
    steps:
    - uses: actions/checkout@v4
      with:
        submodules: 'recursive'
    - name: clone Godot repository
      uses: GuillaumeFalourd/clone-github-repo-action@v2.3
      with:
        depth: 1
        branch: ${{ matrix.version }}
        owner: 'godotengine'
        repository: 'godot'
    - name: Setup Python and SCons
      uses: ./godot/.github/actions/godot-deps
    - name: Download Direct3D 12 SDK components
      run: python ./godot/misc/scripts/install_d3d12_sdk_windows.py
      if: ${{ matrix.version == 4.3 }}
    - name: Download pre-built ANGLE static libraries
      uses: dsaltares/fetch-gh-release-asset@1.1.2
      with:
        repo: godotengine/godot-angle-static
        version: tags/chromium/6029
        file: Windows.6029-1.MSVC_17.x86_64.x86_32.zip
        target: angle/angle.zip

    - name: Extract pre-built ANGLE static libraries
      run: Expand-Archive -Force angle/angle.zip ${{github.workspace}}/

    - name: Setup MSVC problem matcher
      uses: ammaraskar/msvc-problem-matcher@master

    - name: build godot
      shell: pwsh
      run: |
        $env:PYTHONUTF8=1
        .\winbuild.ps1 version=${{ matrix.version }}
